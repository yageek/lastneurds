/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ApplicationPanel.java
 *
 * Created on 15 janv. 2010, 13:28:33
 */

package lastneurds;

import java.awt.Color;
import java.awt.Graphics;
import java.util.ArrayList;

/**
 *
 * @author yaya
 */
public class ApplicationPanel extends javax.swing.JPanel {

    /** Creates new form ApplicationPanel */
    public ApplicationPanel() {
        initComponents();
        this.setSize(500,300);
        this.Entrees = new ArrayList<Point>();
        this.setBackground(Color.white);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    @SuppressWarnings("static-access")
    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        if(evt.getButton() == evt.BUTTON1){
            //on ajoute les boutons
            this.addPoint(evt.getX(), evt.getY(), Point.Type.VERT);
        } 
            
        if(evt.getButton() == evt.BUTTON3){
            this.addPoint(evt.getX(), evt.getY(), Point.Type.BLEU);
        }
        repaint();

    }//GEN-LAST:event_formMouseClicked

    public void addPoint(int x,int y, Point.Type type){
        Point temp = new Point(x,y,type);
        this.getEntrees().add(temp);
        
    }

    public ArrayList<Point> getEntrees() {
        return Entrees;
    }
    public ArrayList<Truth> setupTruth(){
        ArrayList<Truth> list = new ArrayList<Truth>();
        Truth truth;
        for(Point point:this.getEntrees()){
            truth = new Truth(2);
     truth.getEntries().set(0,(double) point.getX());
     truth.getEntries().set(1,(double) point.getY());
     if(point.getType() == Point.Type.BLEU) truth.setOutput(0.0);
     if(point.getType() == Point.Type.VERT) truth.setOutput(1.0);
     list.add(truth);

        }

        return list;

        
    }
    public void setEntrees(ArrayList<Point> Entrees) {
        this.Entrees = Entrees;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    private ArrayList<Point> Entrees;

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);//dessin du background
        for(Point temp:this.getEntrees()){
            if(temp.getType() == Point.Type.BLEU) g.setColor(Color.blue);

             else if(temp.getType() == Point.Type.VERT) g.setColor(Color.green);

            g.fillRect(temp.getX()-5,temp.getY()-5, 10, 10);
        }
        
    }


}
